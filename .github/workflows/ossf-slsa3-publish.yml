# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow lets you compile your Go project using a SLSA3 compliant builder.
# This workflow will generate a so-called "provenance" file describing the steps
# that were performed to generate the final binary.
# The project is an initiative of the OpenSSF (openssf.org) and is developed at
# https://github.com/slsa-framework/slsa-github-generator.
# The provenance file can be verified using https://github.com/slsa-framework/slsa-verifier.
# For more information about SLSA and how it improves the supply-chain, visit slsa.dev.

name: SLSA Go releaser
on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

permissions: read-all

jobs:
  args:
    runs-on: ubuntu-latest
    outputs:
      commit-date: ${{ steps.ldflags.outputs.commit-date }}
      commit: ${{ steps.ldflags.outputs.commit }}
      version: ${{ steps.ldflags.outputs.version }}
      tree-state: ${{ steps.ldflags.outputs.tree-state }}
      changelog: ${{ steps.build_changelog.outputs.changelog }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 获取完整的 git 历史
      - name: Setup ldflags variables
        id: ldflags
        run: |
          echo "commit-date=$(git log --date=iso8601-strict -1 --pretty=%ct)" >> "$GITHUB_OUTPUT"
          echo "commit=$GITHUB_SHA" >> "$GITHUB_OUTPUT"
          echo "version=$(git describe --tags --always --dirty | cut -c2-)" >> "$GITHUB_OUTPUT"
          echo "tree-state=$(if git diff --quiet; then echo "clean"; else echo "dirty"; fi)" >> "$GITHUB_OUTPUT"
      - name: Generate changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v5.4.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mode: 'COMMIT'
          configuration: 'changelog.configure.json'
      - name: Display variables
        run: |
          echo "VERSION=${{ steps.ldflags.outputs.version }}"
          echo "COMMIT=${{ steps.ldflags.outputs.commit }}"
          echo "COMMIT_DATE=${{ steps.ldflags.outputs.commit-date }}"
          echo "TREE_STATE=${{ steps.ldflags.outputs.tree-state }}"
          echo "CHANGELOG=${{ steps.build_changelog.outputs.changelog }}"
  # ========================================================================================================================================
  #     Prerequesite: Create a .slsa-goreleaser.yml in the root directory of your project.
  #       See format in https://github.com/slsa-framework/slsa-github-generator/blob/main/internal/builders/go/README.md#configuration-file
  #=========================================================================================================================================
  build:
    permissions:
      id-token: write # To sign.
      contents: write # To upload release assets.
      actions: read   # To read workflow path.
    needs: args
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.1.0
    with:
      go-version: 1.25
      config-file: .slsa-goreleaser/${{matrix.os}}-${{matrix.arch}}.yaml
      evaluated-envs: "COMMIT_DATE:${{needs.args.outputs.commit-date}}, COMMIT:${{needs.args.outputs.commit}}, VERSION:${{needs.args.outputs.version}}, TREE_STATE:${{needs.args.outputs.tree-state}}"
      draft-release: true
      # =============================================================================================================
      #     Optional: For more options, see https://github.com/slsa-framework/slsa-github-generator#golang-projects
      # =============================================================================================================

  release:
    needs:
      - args
      - build
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Release
        uses: softprops/action-gh-release@v2.3.2
        with:
          generate_release_notes: false
          draft: false
          tag_name: ${{ github.event.release.tag_name }}
          body: ${{ needs.args.outputs.changelog }}
